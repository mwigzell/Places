apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

//apply plugin: 'jacoco'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.mwigzell.places"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.mwigzell.places.CustomTestRunner"
        vectorDrawables.useSupportLibrary = true
    }
    flavorDimensions "version"
    productFlavors {
        dev {
            dimension "version"
            // Enable pre-dexing to produce an APK that can be tested on
            // Android 5.0+ without the time-consuming DEX build processes.
            minSdkVersion 21
        }
        prod {
            dimension "version"
            // The actual minSdkVersion for the production version.
            minSdkVersion 21
        }
    }
    if(project.hasProperty("Places.properties")
            && new File(project.property("Places.properties")).exists()) {

        Properties props = new Properties()
        props.load(new FileInputStream(file(project.property("Places.properties"))))

        signingConfigs {
            release {
                storeFile file(props['keystore'])
                storePassword props['keystore.password']
                keyAlias props['keyAlias']
                keyPassword props['keyPassword']
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    // okhttp has some a dependency which we never touch but which borks lint.  move to warning for now
    lintOptions {
        disable 'TimberArgCount'
        warning 'InvalidPackage'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.android.gms:play-services-ads:9.4.0'
    implementation 'com.google.android.gms:play-services-location:9.4.0'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.0.0' // VectorDrawableCompat
    implementation 'androidx.vectordrawable:vectordrawable-animated:1.0.0'
    implementation 'androidx.transition:transition:1.0.0'
    implementation "androidx.core:core-ktx:1.0.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$KOTLIN_VERSION"
    implementation "com.google.dagger:dagger-android:$DAGGER_VERSION"
    implementation "com.google.dagger:dagger-android-support:$DAGGER_VERSION"
    kapt "com.google.dagger:dagger-android-processor:$DAGGER_VERSION"
    kapt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    compileOnly 'javax.annotation:jsr250-api:1.0'
    implementation 'com.jakewharton.timber:timber:4.3.1'
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }
    implementation 'com.google.guava:guava:18.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.3.1'
    implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$RETROFIT_VERSION"
    implementation "io.reactivex.rxjava2:rxandroid:$RXJAVA2_VERSION"
    implementation "io.reactivex.rxjava2:rxjava:$RXJAVA2_VERSION"
    implementation "io.reactivex.rxjava2:rxkotlin:$RXKOTLIN_VERSION"
    kapt 'com.jakewharton:butterknife-compiler:10.2.0'
    implementation 'com.jakewharton:butterknife:10.2.0'
    implementation 'com.github.bumptech.glide:glide:3.7.0'

    kaptAndroidTest "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    androidTestImplementation 'androidx.annotation:annotation:1.0.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    // Set this dependency to use JUnit 4 rules
    androidTestImplementation 'androidx.test:rules:1.1.1'
    // Set this dependency to build and run Espresso tests
    //androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation('androidx.test.espresso:espresso-contrib:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    // Set this dependency to build and run UI Automator tests
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    // Mockito unit test framework
    //androidTestImplementation "com.google.dexmaker:dexmaker:1.0"
    //androidTestImplementation "com.google.dexmaker:dexmaker-mockito:1.0"
    //androidTestImplementation 'org.mockito:mockito-core:1.9.5'
    androidTestImplementation 'com.crittercism.dexmaker:dexmaker:1.4'
    androidTestImplementation 'com.crittercism.dexmaker:dexmaker-mockito:1.4'
    androidTestImplementation 'com.crittercism.dexmaker:dexmaker-dx:1.4'
    androidTestImplementation 'org.mockito:mockito-core:1.10.19'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.+'
    kaptTest "com.google.dagger:dagger-compiler:2.7"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
}

/*repositories {
    mavenCentral()
}*/

apply plugin: 'kotlin-allopen'
allOpen {
    annotation('com.mwigzell.places.Mockable')
}