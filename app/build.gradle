apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

//apply plugin: 'jacoco'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.mwigzell.places"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.mwigzell.places.CustomTestRunner"
        vectorDrawables.useSupportLibrary = true
    }
    flavorDimensions "dao"
    productFlavors {
        room {
            dimension "dao"
        }
        cbs {
            dimension "dao"
        }
        nodb {
            dimension "dao"
        }
    }
    if(project.hasProperty("Places.properties")
            && new File(project.property("Places.properties")).exists()) {

        Properties props = new Properties()
        props.load(new FileInputStream(file(project.property("Places.properties"))))

        signingConfigs {
            release {
                storeFile file(props['keystore'])
                storePassword props['keystore.password']
                keyAlias props['keyAlias']
                keyPassword props['keyPassword']
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    // okhttp has some a dependency which we never touch but which borks lint.  move to warning for now
    lintOptions {
        disable 'TimberArgCount'
        warning 'InvalidPackage'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.google.android.gms:play-services-ads:$GMS_ADS_VERSION"
    implementation "com.google.android.gms:play-services-location:$GMS_LOCATION_VERSION"
    implementation "androidx.appcompat:appcompat:$ANDROIDX_BASE_VERSION"
    implementation "com.google.android.material:material:$ANDROIDX_BASE_VERSION"
    implementation "androidx.recyclerview:recyclerview:$ANDROIDX_BASE_VERSION"
    implementation "androidx.percentlayout:percentlayout:$ANDROIDX_BASE_VERSION"
    implementation "androidx.vectordrawable:vectordrawable:$ANDROIDX_BASE_VERSION" // VectorDrawableCompat
    implementation "androidx.vectordrawable:vectordrawable-animated:$ANDROIDX_BASE_VERSION"
    implementation "androidx.transition:transition:$ANDROIDX_BASE_VERSION"
    implementation "androidx.core:core-ktx:$ANDROIDX_BASE_VERSION"
    implementation "androidx.lifecycle:lifecycle-extensions:$ANDROIDX_LIFECYCLE_VERSION"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$KOTLIN_VERSION"
    implementation "com.google.dagger:dagger-android:$DAGGER_VERSION"
    implementation "com.google.dagger:dagger-android-support:$DAGGER_VERSION"
    kapt "com.google.dagger:dagger-android-processor:$DAGGER_VERSION"
    kapt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    implementation "com.jakewharton.timber:timber:$TIMBER_VERSION"
    implementation("com.crashlytics.sdk.android:crashlytics:$CRASHLYTICS_VERSION@aar") {
        transitive = true;
    }
    implementation "com.squareup.okhttp3:logging-interceptor:$OKHTTP_LOGGING_VERSION"
    implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$RETROFIT_VERSION"
    implementation "io.reactivex.rxjava2:rxandroid:$RXJAVA2_VERSION"
    implementation "io.reactivex.rxjava2:rxjava:$RXJAVA2_VERSION"
    implementation "io.reactivex.rxjava2:rxkotlin:$RXKOTLIN_VERSION"
    kapt "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"
    implementation "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
    implementation "com.github.bumptech.glide:glide:$GLIDE_VERSION"
    implementation "androidx.room:room-runtime:$ROOM_VERSION"
    kapt "androidx.room:room-compiler:$ROOM_VERSION"
    implementation "androidx.room:room-ktx:$ROOM_VERSION"
    implementation "androidx.room:room-rxjava2:$ROOM_VERSION"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$LIFECYCLE_VERSION"
    implementation "androidx.lifecycle:lifecycle-livedata:$LIFECYCLE_VERSION"

    // androidTest
    kaptAndroidTest "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    androidTestImplementation "androidx.annotation:annotation:$ANDROIDX_BASE_VERSION"
    androidTestImplementation "androidx.test.ext:junit:$ANDROIDX_TEST_VERSION"
    androidTestImplementation "androidx.test:runner:$ANDROIDX_TEST_VERSION"
    androidTestImplementation "androidx.test:rules:$ANDROIDX_TEST_VERSION"
    androidTestImplementation("androidx.test.espresso:espresso-core:$ESPRESSO_VERSION", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation("androidx.test.espresso:espresso-contrib:$ESPRESSO_VERSION", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$MOCKWEBSERVER_VERSION"
    androidTestImplementation "org.mockito:mockito-core:$MOCKITO_VERSION"
    androidTestImplementation "org.mockito:mockito-android:$MOCKITO_VERSION"
    // inclusion of following with exclude allows androidTest to work BUT
    // can't run single tests in studio as a result.
    androidTestImplementation ("androidx.arch.core:core-testing:$CORE_TESTING_VERSION", {
        exclude group: 'org.mockito', module: 'mockito-core'
    })

    // test
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:$MOCKITO_VERSION"
    kaptTest "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    testImplementation "androidx.arch.core:core-testing:$CORE_TESTING_VERSION"
    testImplementation "com.squareup.okhttp3:mockwebserver:$MOCKWEBSERVER_VERSION"
    testImplementation "androidx.room:room-testing:$ROOM_VERSION"
}

apply plugin: 'kotlin-allopen'
allOpen {
    annotation('com.mwigzell.places.Mockable')
}